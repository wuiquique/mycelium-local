name: mycelium-local-dev

services:
  nginx-proxy:
    image: nginx
    ports:
      - "6062:80/tcp"
    volumes:
      - ./default.conf:/etc/nginx/templates/default.conf.template:z,ro
    networks:
      mycelium-local:
      mycelium-global:
        aliases:
          - mycelium-local
    depends_on:
      - api
      - client

  api:
    image: localhost/mycelium-local_api:dev
    expose:
      - "8080"
    volumes:
      - ./api:/app:z,rw
      - gradle:/var/lib/gradle:z,rw
    build:
      context: api
      dockerfile: Dockerfile.dev
    networks:
      - mycelium-local
      - mycelium-global
    depends_on:
      - db

  client:
    image: localhost/mycelium-local_client:dev
    expose:
      - "3000"
    volumes:
      - ./client:/app:z,rw
    build:
      context: client
      dockerfile: Dockerfile.dev
    networks:
      - mycelium-local
      - mycelium-global

  db:
    image: container-registry.oracle.com/database/express:21.3.0-xe
    ports:
      - 2521:1521
    restart: unless-stopped
    environment:
      ORACLE_PWD: "12345"
    volumes:
      - oracledb:/opt/oracle/oradata:z,rw
    networks:
      mycelium-local:
        aliases:
          - myceliumdb

  jenkins:
    image: 127.0.0.1:5000/jenkins:2.401.3-lts-jdk17
    build:
      context: jenkins
      dockerfile: Dockerfile
    privileged: true
    container_name: jenkins
    ports:
      - "8080:8080"
      - "50000:50000"
    networks:
      - mycelium-local
    volumes:
      - jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always

  drone:
    image: drone/drone:2
    container_name: drone
    ports:
      - "7000:80"
    privileged: true
    env_file:
      - .env
    environment:
      - DRONE_SERVER_HOST=150.136.162.189:9998
      - DRONE_SERVER_PROTO=http
      - DRONE_RPC_SECRET=f213e0a34e9e602bd587033b43b5e56b
    networks:
      - mycelium-local
    volumes:
      - /var/lib/drone:/data
    depends_on:
      - sonarqube

  drone-runner: 
    image: drone/drone-runner-docker:1
    networks:
      - mycelium-local
    volumes: 
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - DRONE_RPC_PROTO=http
      - DRONE_RPC_HOST=drone:80
      - DRONE_RPC_SECRET=f213e0a34e9e602bd587033b43b5e56b
      - DRONE_RUNNER_CAPACITY=2
      - DRONE_RUNNER_NAME=mycelium-runner
    ports:
      - "7070:7070"

  sonarqube:
    image: sonarqube:lts
    container_name: sonarqube
    ports:
      - "9000:9000"
    networks:
      - mycelium-local
    environment:
      - SONAR_JDBC_USERNAME=sonar
      - SONAR_JDBC_PASSWORD=12345
      - SONAR_JDBC_URL=jdbc:postgresql://postgres:5432/sonarqube
    depends_on:
      - postgres
    volumes:
      - sonarqube_conf:/opt/sonarqube/conf
      - /media/wuiquique/7A56AF5A56AF15C3/docker/_data/:/opt/sonarqube/data
      - sonarqube_logs:/opt/sonarqube/logs
      - sonarqube_extensions:/opt/sonarqube/extensions

  postgres:
    image: postgres:latest
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: 12345
      POSTGRES_DB: sonarqube
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - mycelium-local

  local-registry:
    image: docker.io/registry:2
    expose:
      - 5000
    networks:
      - mycelium-local

  main:
    image: 127.0.0.1:5000/debian-podman-ssh:12.1
    privileged: true
    ports:
      - 2222:22/tcp
    build:
      context: pcs
      dockerfile: Dockerfile
    volumes:
      - ./home/master:/home/debian:z
      - ./init:/app/init:z,ro
    depends_on:
      - db
    networks:
      - mycelium-local

  dev:
    image: 127.0.0.1:5000/debian-podman-ssh:12.1
    privileged: true
    ports:
      - 2223:22/tcp
    build:
      context: pcs
      dockerfile: Dockerfile
    volumes:
      - ./home/dev:/home/debian:z
      - ./init:/app/init:z,ro
    depends_on:
      - db
    networks:
      - mycelium-local

  uat:
    image: 127.0.0.1:5000/debian-podman-ssh:12.1
    privileged: true
    ports:
      - 2224:22/tcp
    build:
      context: pcs
      dockerfile: Dockerfile
    volumes:
      - ./home/uat:/home/debian:z
      - ./init:/app/init:z,ro
    depends_on:
      - db
    networks:
      - mycelium-local

volumes:
  oracledb:
  gradle:
  jenkins_home:
  sonarqube_conf:
  sonarqube_data:
  sonarqube_logs:
  sonarqube_extensions:
  postgres_data:


networks:
  mycelium-local:
    driver: bridge
  mycelium-global:
    external: true